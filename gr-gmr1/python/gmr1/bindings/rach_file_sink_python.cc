/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(rach_file_sink.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(82cae6f7fcdf33518a8fba5c3daa7c26)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/gmr1/rach_file_sink.h>
// pydoc.h is automatically generated in the build directory
#include <rach_file_sink_pydoc.h>

void bind_rach_file_sink(py::module& m)
{

    using rach_file_sink = ::gr::gmr1::rach_file_sink;


    py::class_<rach_file_sink,
               gr::block,
               gr::basic_block,
               std::shared_ptr<rach_file_sink>>(m, "rach_file_sink", D(rach_file_sink))

        .def(py::init(&rach_file_sink::make),
             py::arg("filename"),
             py::arg("center_freq"),
             py::arg("invert_freq"),
             D(rach_file_sink, make))


        .def("filename", &rach_file_sink::filename, D(rach_file_sink, filename))


        .def("center_freq", &rach_file_sink::center_freq, D(rach_file_sink, center_freq))


        .def("invert_freq", &rach_file_sink::invert_freq, D(rach_file_sink, invert_freq))


        .def("set_center_freq",
             &rach_file_sink::set_center_freq,
             py::arg("center_freq"),
             D(rach_file_sink, set_center_freq))


        .def("set_invert_freq",
             &rach_file_sink::set_invert_freq,
             py::arg("invert_freq"),
             D(rach_file_sink, set_invert_freq))

        ;
}
